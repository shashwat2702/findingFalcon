{"version":3,"sources":["assets/hamburger.svg","utils/apiCalls.js","utils/helperFunction.js","constants/apiUrls.js","components/shared/DropDown/DropDown.js","components/shared/RadioButton/RadioButton.js","components/SearchDetails/SearchDetails.js","components/shared/Button/Button.js","components/HomePage/App.js","components/ResultPage/ResultPage.js","components/shared/Header/Header.js","components/shared/Footer/Footer.js","containers/PageLayout/PageLayout.js","router/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","axios","require","getData","url","get","postData","data","post","headers","Accept","Content-Type","findIndexOfVehicle","vehicles","selectedvehicle","findIndex","vehicle","name","findIndexOfPlanet","planets","selectedPlanets","index","planet","getToken","findFalcon","DropDown","_ref","onChange","react_default","a","createElement","className","value","Number","key","map","includes","isDisabled","planetNumber","usedVehicles","selectedPlanet","indexOfPlanet","distance","planetNotReachable","max_distance","isVehicleAvailable","total_no","RadioButton","onRadioClick","type","concat","disabled","onClick","SearchDetails","state","showVehicles","numberOfOccupiedvehicle","selectedVehicles","reduce","currentVehicle","changeVisibilityOfVehicles","event","target","_this","setState","onDropDownChange","props","_this$props","this","shared_DropDown_DropDown","shared_RadioButton_RadioButton","Component","Button","label","defaultProps","App","_Component","_getPrototypeOf2","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","totalTimeTaken","requestToken","vehicleIndex","substring","getTotalTimeTaken","getSearchDetails","_this$state","SearchDetails_SearchDetails_SearchDetails","_this$state2","totalTime","forEach","indexOfVehicle","speed","onSubmit","asyncToGenerator","regenerator_default","mark","_callee","_this$state3","_this$state4","history","wrap","_context","prev","next","then","_ref2","token","planet_names","vehicle_names","response","status","push","pathname","timeTaken","stop","inherits","createClass","_this2","_this$state5","react","shared_Button_Button","withRouter","ResultPage","location","foundStatus","foundOnPlanet","planet_name","Header","activeLink","react_router_dom","to","src","hamburger","alt","Footer","PageLayout","component","shared_Header_Header","shared_Footer_Footer","react_router","exact","path","containers_PageLayout_PageLayout","Boolean","window","hostname","match","ReactDOM","render","router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.290eab41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hamburger.c078507b.svg\";","const axios = require('axios');\n\nconst getData = url => axios.get(url);\nconst postData = (url, data) => axios.post(url, data, {\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  },\n});\nexport { getData, postData };\n","const findIndexOfVehicle = (vehicles, selectedvehicle) => {\n  const indexOfVehicle = vehicles.findIndex((vehicle) => {\n    if (vehicle.name === selectedvehicle) {\n      return true;\n    }\n    return false;\n  });\n  return indexOfVehicle;\n};\n\nconst findIndexOfPlanet = (planets, selectedPlanets, index) => {\n  const indexOfPlanet = planets.findIndex((planet) => {\n    if (planet.name === selectedPlanets[index]) {\n      return true;\n    }\n    return false;\n  });\n  return indexOfPlanet;\n};\n\nexport { findIndexOfVehicle, findIndexOfPlanet };\n","export const getPlanet = 'https://findfalcone.herokuapp.com/planets';\nexport const getVehicles = 'https://findfalcone.herokuapp.com/vehicles';\nexport const getToken = 'http://findfalcone.herokuapp.com/token';\nexport const findFalcon = 'http://findfalcone.herokuapp.com/find';\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './DropDown.scss';\n\nconst DropDown = ({\n  planets, onChange, name, selectedPlanets,\n}) => (\n  <div className=\"dropDown\">\n    <select value={selectedPlanets[Number(name) - 1]} onChange={onChange} name={name}>\n      <option value=\"\">Select One</option>\n      {(selectedPlanets[Number(name) - 1] !== '')\n      && (\n      <option\n        value={selectedPlanets[Number(name) - 1]}\n        key={selectedPlanets[Number(name) - 1]}\n      >\n        {selectedPlanets[Number(name) - 1]}\n\n      </option>\n      )\n      }\n      {\n          planets.map(planet => (!selectedPlanets.includes(planet.name)\n            && <option value={planet.name} key={planet.name}>{planet.name}</option>\n          ))\n      }\n    </select>\n  </div>\n);\nDropDown.propTypes = {\n  planets: PropTypes.array.isRequired,\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.number.isRequired,\n  selectedPlanets: PropTypes.array.isRequired,\n};\nexport default DropDown;\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './RadioButton.scss';\n\n\nconst isDisabled = (selectedPlanets, planetNumber, vehicle, planets, usedVehicles) => {\n  const selectedPlanet = selectedPlanets[Number(planetNumber) - 1];\n  const indexOfPlanet = planets.findIndex((planet) => {\n    if (planet.name === selectedPlanet) {\n      return true;\n    }\n    return false;\n  });\n  const planetDetails = planets[indexOfPlanet];\n  const { distance } = planetDetails;\n  const planetNotReachable = (vehicle.max_distance < distance);\n  const isVehicleAvailable = vehicle.total_no\n  - ((usedVehicles[vehicle.name]) ? (usedVehicles[vehicle.name]) : 0);\n  const shouldBeDisabled = planetNotReachable || !isVehicleAvailable;\n  return shouldBeDisabled;\n};\n\nconst RadioButton = ({\n  vehicles, onRadioClick, planetNumber, selectedPlanets, planets, usedVehicles,\n}) => (\n  <div>\n    {\n          vehicles.map(vehicle => (\n            <div key={vehicle.name} className=\"dropdown\">\n              <input\n                type=\"radio\"\n                name={`vehicle${planetNumber}`}\n                value={vehicle.name}\n                disabled={isDisabled(selectedPlanets, planetNumber, vehicle, planets, usedVehicles)}\n                onClick={onRadioClick}\n              />\n              {' '}\n              {vehicle.name}\n              {` (${vehicle.total_no - ((usedVehicles[vehicle.name]) ? (usedVehicles[vehicle.name]) : 0)})`}\n              <br />\n            </div>\n          ))\n      }\n  </div>\n);\n\nRadioButton.propTypes = {\n  vehicles: PropTypes.array.isRequired,\n  selectedPlanets: PropTypes.array.isRequired,\n  planets: PropTypes.array.isRequired,\n  onRadioClick: PropTypes.func.isRequired,\n  planetNumber: PropTypes.number.isRequired,\n  usedVehicles: PropTypes.object.isRequired,\n};\nexport default RadioButton;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable react/forbid-prop-types */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './SearchDetails.scss';\nimport DropDown from '../shared/DropDown/DropDown';\nimport RadioButton from '../shared/RadioButton/RadioButton';\n\nexport default class SearchDetails extends Component {\n  state={\n    showVehicles: false,\n  }\n\n  numberOfOccupiedvehicle = (selectedVehicles) => {\n    const vehicleCount = selectedVehicles.reduce((usedVehicles, currentVehicle) => {\n      if (currentVehicle in usedVehicles) {\n        usedVehicles[currentVehicle] += 1;\n      } else {\n        usedVehicles[currentVehicle] = 1;\n      }\n      return usedVehicles;\n    },\n    {});\n    return vehicleCount;\n  }\n\n  changeVisibilityOfVehicles = (event) => {\n    const { target } = event;\n    const { value } = target;\n    if (value === 'Select One') {\n      this.setState({ showVehicles: false });\n    } else {\n      this.setState({ showVehicles: true });\n    }\n  }\n\n  onChange = (event) => {\n    const { onDropDownChange } = this.props;\n    onDropDownChange(event);\n    this.changeVisibilityOfVehicles(event);\n  }\n\n  render() {\n    const {\n      planets, vehicles, planetNumber, selectedPlanets, onRadioClick, selectedVehicles,\n    } = this.props;\n    const { showVehicles } = this.state;\n    return (\n      <div className=\"planetDropDown\">\n        <h3>\n    Planet\n          {' '}\n          {planetNumber}\n        </h3>\n        <DropDown\n          planets={planets}\n          selectedPlanets={selectedPlanets}\n          onChange={this.onChange}\n          name={planetNumber}\n        />\n        {showVehicles\n          && (\n          <RadioButton\n            vehicles={vehicles}\n            onRadioClick={onRadioClick}\n            planetNumber={planetNumber}\n            selectedPlanets={selectedPlanets}\n            planets={planets}\n            usedVehicles={this.numberOfOccupiedvehicle(selectedVehicles)}\n          />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nSearchDetails.propTypes = {\n  planets: PropTypes.array.isRequired,\n  selectedPlanets: PropTypes.array.isRequired,\n  vehicles: PropTypes.array.isRequired,\n  planetNumber: PropTypes.number.isRequired,\n  onDropDownChange: PropTypes.func.isRequired,\n  onRadioClick: PropTypes.func.isRequired,\n  selectedVehicles: PropTypes.array.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.scss';\n\nconst Button = ({ onClick, label, disabled }) => (\n  <button\n    className=\"editTaskButton\"\n    type=\"submit\"\n    onClick={onClick}\n    disabled={disabled}\n  >\n    {label}\n  </button>\n);\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n};\nButton.defaultProps = {\n  disabled: false,\n};\nexport default Button;\n","import React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './App.scss';\nimport { getData, postData } from '../../utils/apiCalls';\nimport { findIndexOfVehicle, findIndexOfPlanet } from '../../utils/helperFunction';\nimport {\n  getPlanet, getVehicles, getToken, findFalcon,\n} from '../../constants/apiUrls';\nimport SearchDetails from '../SearchDetails/SearchDetails';\nimport Button from '../shared/Button/Button';\n\nexport class App extends Component {\n  state={\n    planets: [],\n    vehicles: [],\n    selectedPlanets: ['', '', '', ''],\n    selectedVehicles: ['', '', '', ''],\n    totalTimeTaken: 0,\n    requestToken: '',\n  }\n\n  componentDidMount() {\n    getData(getPlanet).then((response) => {\n      if (response.status === 200) {\n        const { data } = response;\n        this.setState({ planets: data });\n      }\n    });\n    getData(getVehicles).then((response) => {\n      if (response.status === 200) {\n        const { data } = response;\n        this.setState({ vehicles: data });\n      }\n    });\n  }\n\n  onDropDownChange = (event) => {\n    const { target } = event;\n    const { name, value } = target;\n    const { selectedPlanets } = this.state;\n    selectedPlanets[Number(name) - 1] = value;\n    this.setState({ selectedPlanets });\n  }\n\n  onRadioClick = (event) => {\n    const { target } = event;\n    const { name, value } = target;\n    const vehicleIndex = name.substring(7);\n    const { selectedVehicles } = this.state;\n    selectedVehicles[Number(vehicleIndex) - 1] = value;\n    this.setState({ selectedVehicles });\n    this.getTotalTimeTaken();\n  }\n\n  getSearchDetails = () => {\n    const {\n      planets, vehicles, selectedPlanets, selectedVehicles,\n    } = this.state;\n    const listOfSearchDetails = selectedPlanets.map((planet, index) => (\n      <SearchDetails\n        planets={planets}\n        selectedPlanets={selectedPlanets}\n        vehicles={vehicles}\n        planetNumber={index + 1}\n        onDropDownChange={this.onDropDownChange}\n        onRadioClick={this.onRadioClick}\n        selectedVehicles={selectedVehicles}\n      />\n    ));\n    return listOfSearchDetails;\n  }\n\n  getTotalTimeTaken = () => {\n    const {\n      planets, vehicles, selectedPlanets, selectedVehicles,\n    } = this.state;\n    let totalTime = 0;\n    selectedVehicles.forEach((selectedvehicle, index) => {\n      if (selectedvehicle !== '') {\n        const indexOfVehicle = findIndexOfVehicle(vehicles, selectedvehicle);\n        const indexOfPlanet = findIndexOfPlanet(planets, selectedPlanets, index);\n        totalTime += (planets[indexOfPlanet].distance / vehicles[indexOfVehicle].speed);\n      }\n    });\n    this.setState({ totalTimeTaken: totalTime });\n  }\n\n  onSubmit = async () => {\n    const { selectedPlanets, selectedVehicles } = this.state;\n    await postData(getToken, '').then(({ data }) => {\n      const { token } = data;\n      this.setState({ requestToken: token });\n    });\n    const { requestToken, totalTimeTaken } = this.state;\n    const { history } = this.props;\n    const requestBody = {\n      token: requestToken,\n      planet_names: selectedPlanets,\n      vehicle_names: selectedVehicles,\n    };\n    postData(findFalcon, requestBody).then((response) => {\n      const { data, status } = response;\n      if (status === 200) {\n        history.push({\n          pathname: '/result',\n          state: {\n            key: data,\n            timeTaken: totalTimeTaken,\n          },\n        });\n      }\n    });\n  };\n\n  render() {\n    const { totalTimeTaken, selectedVehicles } = this.state;\n    return (\n      <Fragment>\n        <h1>Finding Falcon</h1>\n        <h2>Please Select the planets where you want to send the army:</h2>\n        <div className=\"listOfDropDown\">\n          {this.getSearchDetails()}\n        </div>\n        <h2>\n            Time Taken:\n          {' '}\n          {totalTimeTaken}\n          {(totalTimeTaken === 0) ? '  Hour' : '  Hours'}\n        </h2>\n        <div className=\"findButton\">\n          <Button\n            label=\"Find Falcon!\"\n            onClick={this.onSubmit}\n            disabled={selectedVehicles.includes('')}\n          />\n        </div>\n      </Fragment>\n    );\n  }\n}\nApp.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n};\nexport default withRouter(App);\n","/* eslint-disable camelcase */\n/* eslint-disable react/forbid-prop-types */\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './ResultPage.scss';\nimport Button from '../shared/Button/Button';\n\nexport class ResultPage extends Component {\n  constructor(props) {\n    super(props);\n    const { location, history } = props;\n    const { state } = location;\n    let foundStatus = '';\n    let totalTimeTaken = 0;\n    let foundOnPlanet = '';\n    if (!state) {\n      history.push('/');\n    } else {\n      const { key, timeTaken } = state;\n      const { status, planet_name } = key;\n      foundStatus = status;\n      totalTimeTaken = timeTaken;\n      foundOnPlanet = planet_name;\n    }\n    this.state = {\n      foundStatus,\n      totalTimeTaken,\n      foundOnPlanet,\n    };\n  }\n\n  onSubmit = () => {\n    const { history } = this.props;\n    history.push('/');\n  }\n\n  render() {\n    const { foundStatus, totalTimeTaken, foundOnPlanet } = this.state;\n    return (\n      <div>\n        <h1>Finding Falcon! </h1>\n        {(foundStatus === 'success')\n          ? <h2>Success! Congratulations on Finding Falcone. King Shan is mighty pleased.</h2>\n          : <h2>Sorry! Falcone was not found on selected Planets. King Shan is dissappointed.</h2>\n        }\n        {\n            (foundStatus === 'success') && (\n            <div>\n              <h2>\n                Time taken\n                {' '}\n                {totalTimeTaken}\n              </h2>\n              <h2>\n                Planet Found:\n                {' '}\n                {foundOnPlanet}\n              </h2>\n            </div>\n            )\n        }\n        <div className=\"startAgainButton\">\n          <Button\n            label=\"Start Again\"\n            onClick={this.onSubmit}\n          />\n        </div>\n      </div>\n    );\n  }\n}\nResultPage.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n};\nexport default withRouter(ResultPage);\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport './Header.scss';\nimport hamburger from '../../../assets/hamburger.svg';\n\nexport class Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeLink: 'home',\n    };\n  }\n\n  render() {\n    return (\n      <nav className=\"pageHeader\">\n        <div className=\"navLinks\">\n          <Link to=\"/\" className=\"active\">Home</Link>\n          <Link to=\"/\">News</Link>\n          <Link to=\"/\">Contact</Link>\n          <Link to=\"/\">About</Link>\n          <img src={hamburger} alt=\"hamburger menu\" />\n        </div>\n      </nav>\n    );\n  }\n}\nexport default withRouter(Header);\n","import React from 'react';\nimport './Footer.scss';\n\nconst Footer = () => (\n  <div className=\"footer\">\n    <p>Footer</p>\n  </div>\n);\nexport default Footer;\n","/* eslint-disable react/prefer-stateless-function */\n/* eslint-disable no-shadow */\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n// eslint-disable-next-line import/no-named-as-default\nimport Header from '../../components/shared/Header/Header';\nimport Footer from '../../components/shared/Footer/Footer';\n\nexport class PageLayout extends Component {\n  render() {\n    const {\n      component: Component,\n    } = this.props;\n    return (\n      <Fragment>\n        <Header />\n        <Component />\n        <Footer />\n      </Fragment>\n    );\n  }\n}\n\nPageLayout.propTypes = {\n  component: PropTypes.element.isRequired,\n};\nexport default PageLayout;\n","import React from 'react';\nimport { withRouter, Route, Switch } from 'react-router-dom';\nimport App from '../components/HomePage/App';\nimport ResultPage from '../components/ResultPage/ResultPage';\n// eslint-disable-next-line import/no-named-as-default\nimport PageLayout from '../containers/PageLayout/PageLayout';\n\nconst Router = () => (\n  <Switch>\n    <Route exact path=\"/result\" component={() => (<PageLayout component={ResultPage} />)} />\n    <Route path=\"/\" component={() => (<PageLayout component={App} />)} />\n  </Switch>\n);\n\nexport default withRouter(Router);\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.scss';\nimport Router from './router/index';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <Router />\n  </HashRouter>, document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}